<div>
    <partial name="_AdminNavBar" />
</div>
@model CarRentalPortal.Models.CarTable
<div class="row">
    <div class="col-9">
        <h1 class="page-heading">REGISTER A NEW CAR</h1>
    </div>
    <div class="col-3">
        @if (ViewBag.SuccessMessage == "Added")
        {
            <h6 class="caradded-success">
                Car Added Successfully
            </h6>
        }@if (ViewBag.SuccessMessage == "error")
        {
            <h6 class="caradded-success text-danger">
               Some Error Occured
            </h6>
        }
    </div>

</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="carDetailsDiv container">
        <form asp-action="AdminPortal" method="post">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.LabelFor(model => model.CarName, new { @class = "carLabel" })
            @Html.EditorFor(model => model.CarName, new { htmlAttributes = new { placeholder = "Name of the car", @class = "form-control formInput" } })
            @Html.ValidationMessageFor(model => model.CarName, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.CarRegNo, new { @class = "carLabel" }) 
            <span id="repeatedCarNo" class="text-danger"></span>
            <input type="text" name="CarRegNo" id="CarRegNo" class="form-control formInput spacedInput" placeholder="Registration number of the car" onchange="capitalizeRegNo()" />
            @*@Html.EditorFor(model => model.CarRegNo, new { htmlAttributes = new { placeholder = "Registration number of the car", @class = "form-control formInput" } })*@
            @Html.ValidationMessageFor(model => model.CarRegNo, "", new { @class = "text-danger" })
            
            @Html.LabelFor(model => model.CarType, new { @class = "carLabel" })
            <br />
            @Html.DropDownListFor(m => m.CarType,
             new SelectList(Enum.GetValues(typeof(CarVarient))),
             "Select Car Type", new { @class = "form-control formInput" })
            @Html.ValidationMessageFor(model => model.CarType, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.ChargePerDay, new { @class = "carLabel" })
            @Html.EditorFor(model => model.ChargePerDay, new { htmlAttributes = new { placeholder = "Charge Per Day", @class = "form-control formInput" } })
            @Html.ValidationMessageFor(model => model.ChargePerDay, "", new { @class = "text-danger" })

            <div class="d-grid gap-2 d-md-block">
                <button class="btn btn-primary formSubmit" type="submit" id="btn-one">Add Car</button>
            </div>
        </form>
    </div>

}
<script>
    function capitalizeRegNo() {
        var regNo = document.getElementById("CarRegNo").value;
        var flag = 0;
        document.getElementById("CarRegNo").value = regNo.toUpperCase();
        fetch("https://localhost:44305/api/Car/getCarRegNo").then(response => response.json())
            .then((items) => {
                items.forEach((item) => {
                    console.log(item);
                    if (item == regNo) {
                        flag = 1;
                    }
                });
                if (flag == 1) {
                    document.getElementById("btn-one").disabled = true;
                    document.getElementById("repeatedCarNo").innerHTML = "Already registered!";
                }
                else {
                    document.getElementById("repeatedCarNo").innerHTML = "";
                    document.getElementById("btn-one").disabled = false;
                }
            });
    }
</script>
