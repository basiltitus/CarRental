@model IEnumerable<CarRentalPortal.Models.User>

<div>
    <partial name="_AdminNavBar" />
</div>
<div class="row p-4">
    <div class="col-4 text-center offset-4">
        <h3>Administrator Accounts</h3>
    </div>
    <div class="col-4 text-right">
        <button type="button" id="LockAllBtn" class="btn btn-success"><i class="fas fa-lock"></i> Lock </button>
            <button type="button" id="UnlockAllBtn" class="btn btn-danger"><i class="fas fa-lock-open"></i> Unlock</button>
    </div>
</div>
<div class="sidePanel row p-3 border">
    <div class="col-2">
        <div class="container sidePanel p-3 border" id="leftpanel">
           
            <div class="margintop30">
                <b>   Filter By Status</b>
                <div class="row maxWidth">
                    <div class="col-6">
                        <a asp-action="AccountVerification" id="activeBtn" asp-controller="home" asp-route-sortby="@ViewBag.SortBy" asp-route-sortorder="@ViewBag.SortOrder" asp-route-status="locked"  class="btn transmissionBtn"><i class="fas fa-check-circle"></i> Locked</a>
                    </div><div class="col-6">
                        <a asp-action="AccountVerification" id="inactiveBtn" asp-controller="home" asp-route-sortby="@ViewBag.SortBy" asp-route-sortorder="@ViewBag.SortOrder" asp-route-status="unlocked" class="btn transmissionBtn"><i class="fas fa-ban"></i> Unlocked</a>
                    </div>
                </div>
            </div>
            
            <div class="margintop30">
                <a asp-action="CarList" asp-controller="home" class="btn btn-outline-danger">Reset Filteration</a>
            </div>
        </div>
    </div>
    
    <div class="col-4 offset-1">
        <b> Sort Order : </b><div class="switch-field">
            @if (ViewBag.SortOrder == "ascending")
            {
                <input type="radio" name="orderRadio" class="orderRadio btn-check" id="ascendingRadio" value="ascending" autocomplete="off" checked>
            }
            else
            {
                <input type="radio" name="orderRadio" class="orderRadio btn-check" id="ascendingRadio" value="ascending" autocomplete="off">
            }
            <label class="btn btn-outline-success" for="ascendingRadio"><i class="fas fa-sort-amount-down-alt"></i> Low->High</label>


            @if (ViewBag.SortOrder == "descending")
            {
                <input type="radio" name="orderRadio" class="orderRadio btn-check" id="descendingRadio" value="descending" autocomplete="off" checked>
            }
            else
            {
                <input type="radio" name="orderRadio" class="orderRadio btn-check" id="descendingRadio" value="descending" autocomplete="off">
            } <label class="btn btn-outline-success" for="descendingRadio"><i class="fas fa-sort-amount-down"></i> High->Low</label>
        </div>
    </div>
    <div class="col-4 offset-1">
        <b> Sort By : </b><div class="switch-field">
            @if (ViewBag.SortBy == "created")
            {
                <input type="radio" name="sortRadio" id="createdRadio" value="created" class="sortbyradio" checked>
            }
            else
            {
                <input type="radio" name="sortRadio" id="createdRadio" class="sortbyradio" value="created">
            }
            <label class="form-check-label" for="createdRadio">
                <i class="fas fa-calendar-day"></i> Created On
            </label>

            @if (ViewBag.SortBy == "name")
            {
                <input type="radio" name="sortRadio" value="name" class="sortbyradio" id="chargeRadio" checked>
            }
            else
            {
                <input type="radio" name="sortRadio" value="name" class="sortbyradio" id="chargeRadio">
            }
            <label class="form-check-label" for="chargeRadio">
                <i class="fab fa-amilia"></i> Name
            </label>
        </div>
    </div>
        <div class="row">
            @if (Model.Count() == 0)
            {


<h5 class="p-5">No records available</h5>
            }
            else
            {
        <table class="table table-bordered table-striped mt-2">
            <thead>
                <tr>

                    <th>
                        <input type="checkbox" id="checkAll" />
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmailId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PhoneNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DOB)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @{ foreach (var item in Model)
                    {
                        <tr>

                            <td>
                                <input type="checkbox" class="checkBox"
                                       value="@item.UserId" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EmailId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DOB)
                            </td>
                            <td>
                                @if (item.Role == "lockedadmin")
                                {
                                    <button class="btn btn-secondary unlockbtn" data-prop="@item.UserId"><i class="fas fa-lock"></i> <br />Locked</button>
                                }
                                else
                                {
                                    <button class="btn btn-success lockbtn" data-prop="@item.UserId"><i class="fas fa-lock-open"></i> <br />Unlocked</button>
                                }

                            </td>
                        </tr>
                    }
                }

            </tbody>
        </table>
                    }
    </div>
    <script type="text/javascript">
        function initializeTransmissionBtn() {
        var activeBtn = document.getElementById("activeBtn");
        var inactiveBtn = document.getElementById("inactiveBtn");
        if ("@ViewBag.Status.ToString()" == "locked") {
            activeBtn.classList.add("selectedBtn");
        } else if ("@ViewBag.Status.ToString()" == "unlocked") {
            inactiveBtn.classList.add("selectedBtn");
        }
    }
        $(document).ready(function () {
            initializeTransmissionBtn();
        $("#checkAll").click(function () {
            $(".checkBox").prop('checked',
                $(this).prop('checked'));
        });
        $(function () {
            $('input[name="orderRadio"]').click(function () {
                var sortby = "@ViewBag.SortBy.ToString()";
                if ($(this).is(':checked')) {
                    location.href = "@Url.Action("AccountVerification", "home")" + "?sortby=" + sortby + "&sortorder=" + $(this).val()+"&status="+"@ViewBag.Status";
                }
            });
        });
        $(function () {
            $('input[name="sortRadio"]').click(function () {
                var sortOrder = "@ViewBag.SortOrder.ToString()";
                if ($(this).is(':checked')) {
                    location.href = "@Url.Action("AccountVerification", "home")" + "?sortby=" + $(this).val() + "&sortorder=" + sortOrder+"&status="+"@ViewBag.Status";
                }
            });
        });
    });
        $("#LockAllBtn").click(function () {
            var selectedIDs = new Array();
            $('input:checkbox.checkBox').each(function () {
                if ($(this).prop('checked')) {
                    selectedIDs.push($(this).val());

                }
            });
            if (selectedIDs.length == 0) {
                Swal.fire('Please select atleast one to change status')
                return false;
            }
            console.log(selectedIDs);
            var options = {};
            options.url = "/home/LockSelectedAccount";
            options.type = "POST";
            options.data = JSON.stringify(selectedIDs);
            options.contentType = "application/json";
            options.dataType = "json";
            options.success = function (msg) {
                Swal.fire(
                    'Locked!',
                    'Selected accounts has been locked.',
                    'success'
                )
                location.href = "@Url.Action("AccountVerification", "home")"
            };
            options.error = function () {
                alert("Error while changing status!");
            };
            Swal.fire({
                title: 'Are you sure?',
                text: "Selected admin accounts will be locked!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Lock it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax(options);
                }
            })

        });
        $("#UnlockAllBtn").click(function () {
            var selectedIDs = new Array();
            $('input:checkbox.checkBox').each(function () {
                if ($(this).prop('checked')) {
                    selectedIDs.push($(this).val());

                }
            });
            if (selectedIDs.length == 0) {
                Swal.fire('Please select atleast one to change status')
                return false;
            }
            console.log(selectedIDs);
            var options = {};
            options.url = "/home/UnlockSelectedAccount";
            options.type = "POST";
            options.data = JSON.stringify(selectedIDs);
            options.contentType = "application/json";
            options.dataType = "json";
            options.success = function (msg) {
                Swal.fire(
                    'UnLocked!',
                    'Selected Accounts has been unlocked.',
                    'success'
                )
                location.href = "@Url.Action("AccountVerification", "home")"
            };
            options.error = function () {
                alert("Error while changing status!");
            };
            Swal.fire({
                title: 'Are you sure?',
                text: "The selected Account will be Unlocked!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Unlock it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax(options);
                }
            })

        });

        $('.lockbtn').on('click', function () {
                var prop = $(this).attr('data-prop');
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Lock Account'
                }).then((result) => {
                    if (result.isConfirmed) {
                        location.href = "@Url.Action("ChangeLockStatus", "home")" + "?id=" + prop + "&status=lock";

                        Swal.fire(
                            'Locked!',
                            'Account has been locked.',
                            'success'
                        )
                        return false;
                    }
                })
            }
        );
        $('.unlockbtn').on('click', function () {
                var prop = $(this).attr('data-prop');
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Unlock It'
                }).then((result) => {
                    if (result.isConfirmed) {
                        location.href = "@Url.Action("ChangeLockStatus", "home")" + "?id=" + prop + "&status=unlock";

                        Swal.fire(
                            'Unlocked!',
                            'Account has been unlocked.',
                            'success'
                        )
                        return false;
                    }
                })
            }
        );

    </script>