@using Microsoft.AspNetCore.Http;
@model IEnumerable<CarRentalPortal.Models.CarModel>

<div>
    <partial name="_AdminNavBar" />
</div>
<div class="row p-4">
    <div class="col-4 text-center offset-4">
        <h3>Car Model List</h3>
    </div>
    <div class="col-4 text-right">
        <a asp-action="CreateCarModel" asp-controller="home" class="btn btn-primary"><i class="fas fa-plus-square"></i> Add Model</a>
        @*<button type="button" id="delete" class="btn btn-success"><i class="far fa-trash-alt"></i> Active </button>
        <button type="button" id="delete" class="btn btn-danger"><i class="far fa-trash-alt"></i> De Activate</butt*@<!--on>-->
    </div>
</div>
<div class="sidePanel row p-3 border">
    <div class="col-4 offset-1">
        <b> Sort Order : </b><div class="switch-field">
            @if (ViewBag.SortOrder == "ascending")
            {
                <input type="radio" name="orderRadio" class="orderRadio btn-check" id="ascendingRadio" value="ascending" autocomplete="off" checked>
            }
            else
            {
                <input type="radio" name="orderRadio" class="orderRadio btn-check" id="ascendingRadio" value="ascending" autocomplete="off">
            }
            <label class="btn btn-outline-success" for="ascendingRadio"><i class="fas fa-sort-amount-down-alt"></i> Low->High</label>


            @if (ViewBag.SortOrder == "descending")
            {
                <input type="radio" name="orderRadio" class="orderRadio btn-check" id="descendingRadio" value="descending" autocomplete="off" checked>
            }
            else
            {
                <input type="radio" name="orderRadio" class="orderRadio btn-check" id="descendingRadio" value="descending" autocomplete="off">
            } <label class="btn btn-outline-success" for="descendingRadio"><i class="fas fa-sort-amount-down"></i> High->Low</label>
        </div>
    </div>
    <div class="col-5 offset-1">
        <b> Sort By : </b><div class="switch-field">
            @if (ViewBag.SortBy == "created")
            {
                <input type="radio" name="sortRadio" id="createdRadio" value="created" class="sortbyradio" checked>
            }
            else
            {
                <input type="radio" name="sortRadio" id="createdRadio" class="sortbyradio" value="created">
            }
            <label class="form-check-label" for="createdRadio">
                <i class="fas fa-calendar-day"></i> Created On
            </label>

            @if (ViewBag.SortBy == "charge")
            {
                <input type="radio" name="sortRadio" value="charge" class="sortbyradio" id="chargeRadio" checked>
            }
            else
            {
                <input type="radio" name="sortRadio" value="charge" class="sortbyradio" id="chargeRadio">
            }
            <label class="form-check-label" for="chargeRadio">
                <i class="fas fa-rupee-sign"></i> Charge Per Day
            </label>
            @if (ViewBag.SortBy == "seat")
            {
                <input type="radio" name="sortRadio" value="seat" class="sortbyradio" id="seatRadio" checked>
            }
            else
            {
                <input type="radio" name="sortRadio" value="seat" class="sortbyradio" id="seatRadio">
            }
            <label class="form-check-label" for="seatRadio">
                <i class="fas fa-chair"></i> Seat Count
            </label>
        </div>
    </div>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    @*
                    <th>
                        <input type="checkbox" id="checkAll" />
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.CarName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CarTransmission)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CarType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SeatCount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChargePerDay)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @{ foreach (var item in Model)
                {
                    <tr>
                        @*
                        <td>
                            <input type="checkbox" class="checkBox"
                                   value="@item.CarModelId" />
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.CarName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CarTransmission)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CarType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SeatCount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ChargePerDay)
                    </td>
                    <td>
                        <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("ViewCarModel", "home", new { id = item.CarModelId })';return false;"><i class="fas fa-eye"></i></button>|
                        @if (Context.Session.GetInt32("_userId") == item.UserId || Context.Session.GetString("_userType") == "Super")
                        {
                            <button type="button" class="btn btn-primary edit-btn " onclick="location.href='@Url.Action("EditCarModel", "home", new { id = item.CarModelId })';return false;"><i class="fas fa-pen-square"></i></button>
                            @*<button type="button" class="btn btn-danger dltBnt" data-prop="@item.CarModelId"><i class="fas fa-trash"></i></button>*@
                        }
                    </td>
                </tr>
            }
            }

        </tbody>
    </table>
    <script type="text/javascript">

    $(document).ready(function () {
        $(function () {
            $('input[name="orderRadio"]').click(function () {
                var sortby = "@ViewBag.SortBy.ToString()";
                if ($(this).is(':checked')) {
                    location.href = "@Url.Action("CarModelList", "home")" + "?sortby=" + sortby + "&sortOrder=" + $(this).val();
                }
            });
        });
        $(function () {
            $('input[name="sortRadio"]').click(function () {
                var sortOrder = "@ViewBag.SortOrder.ToString()";
                if ($(this).is(':checked')) {
                    location.href = "@Url.Action("CarModelList", "home")" + "?sortby=" + $(this).val() + "&sortOrder=" + sortOrder;
                }
            });
        });
       @* $("#checkAll").click(function () {
            $(".checkBox").prop('checked',
                $(this).prop('checked'));
        });*@

       @* $("#delete").click(function () {
            var selectedIDs = new Array();
            $('input:checkbox.checkBox').each(function () {
                if ($(this).prop('checked')) {
                    selectedIDs.push($(this).val());

                }
            });
            if (selectedIDs.length == 0) {
                Swal.fire('Please select atleast One to delete')
                return false;
            }
            console.log(selectedIDs);
            var options = {};
            options.url = "/home/DeleteCarModelSelected";
            options.type = "POST";
            options.data = JSON.stringify(selectedIDs);
            options.contentType = "application/json";
            options.dataType = "json";
            options.success = function (msg) {
                Swal.fire(
                    'Deleted!',
                    'Selected items has been deleted.',
                    'success'
                )
                 location.href = "@Url.Action("CarModelList", "home")"
            };
            options.error = function () {
                alert("Error while deleting the records!");
            };
            Swal.fire({
            title: 'Are you sure?',
            text: "Cars coming under this model will also be deleted!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                 $.ajax(options);
                }
                })

        });
    $('.dltBnt').click(function () {
        var prop = $(this).attr('data-prop');


        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                 location.href = "@Url.Action("DeleteCarModel", "home")" + "/" + prop ;

                Swal.fire(
                'Deleted!',
                'Car Model has been deleted.',
                'success'
                )
                return false;
                }
                })
    });
*@
    });
    </script>
