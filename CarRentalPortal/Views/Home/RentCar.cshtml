@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model CarRentalPortal.Models.OrderTable
@{
    var type = ViewBag.CarVarients;
}
<div>
    <partial name="_NavBar" />
</div>
<div class="container">
    @if (ViewBag.PendingOrders > 0)
    {
        <h4 class="text-danger">You Have @ViewBag.PendingOrders Pending Orders ... Please @Html.ActionLink("click here ", "OrderHistory") to complete your existing ride </h4>
    }
    <h1 class="page-heading">Rent Your Car</h1>
    <div class="row">
        <div class="col-4"></div>
        <div class="col-4">
            <div class="container rentDiv">


                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                <form asp-action="RentCar" method="post" id="msform">
                    <ul id="progressbar">
                        <li class="active" id="account"><strong></strong></li>
                        <li id="personal"><strong></strong></li>
                        <li id="payment"><strong></strong></li>
                        <li id="confirm"><strong></strong></li>
                    </ul>
                    <fieldset>
                        <div class="form-card">
                            <h2 class="fs-title">Select Dates</h2>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => model.FromDate, new { @class = "rentLabel" })
                            <input type="Date" id="fromDatePicker" name="FromDate" onchange="dateSelected()" class="form-control formInput" />
                            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => model.ToDate, new { @class = "rentLabel" })
                            <input type="Date" id="toDatePicker" name="ToDate" onchange="dateSelected()" class="form-control formInput" />
                            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                            <span id="dateValidationMessage" class="text-danger"></span>
                        </div>
                        <input type="button" name="next" class="next action-button" value="Next Step" />
                    </fieldset>
                    <fieldset class="hiddenfield">
                        <div class="form-card">
                            <h2 class="fs-title">Select Transmission</h2>
                            <select id="transmissionSelector" class="form-control formInput">
                                <option value="0">Manual</option>
                                <option value="1">Automatic</option>
                            </select>
                        </div>
                        <input type="button" name="previous" class="previous action-button-previous" value="Previous" />
                        <input type="button" name="next" class="next action-button" value="Next Step" />
                    </fieldset>
                    <fieldset class="hiddenfield">
                        <div class="form-card">
                            <h2 class="fs-title">Select Varient</h2>
                            <select id="varientSelector" class="form-control formInput">
                                @{ 
                                    int i = 0;
                                foreach (var item in ViewBag.CarVarients)
                                    {

                                    <option value="@i">  @item</option>
                                   ++i;
                                            } 
                                        }
                            </select>

                        </div>
                        <input type="button" name="previous" class="previous action-button-previous" value="Previous" />
                        <input type="button" id="varientNext" class="next action-button" value="Next Step" />
                    </fieldset>
                    <fieldset class="hiddenfield">
                        <div class="form-card">
                            <h2 class="fs-title">Select Car</h2>
                            <span class="rentLabel">Car Name</span><br />
                            <select id="carSelector" class="form-control formInput" onchange="carSelected()" name="CarId">
                                <option selected value="0">---Select---</option>
                                @* @foreach (var item in ViewBag.CarListed)
                {

                    <option value="@item.CarId">  @item.CarName</option>
                }*@
                            </select>
                            @Html.ValidationMessageFor(model => model.CarId, "", new { @class = "text-danger" })

                        </div>
                                <input type="button" name="previous" class="previous action-button-previous" value="Previous" />
                                <button type="submit" id="rentBtn" disabled class="next action-button">Rent Now</button>
                           
                    </fieldset>
                    
                </form>

                }
            </div>
        </div>
        <div class="container col-4">
            <div class="summary-div">
                <center><h3>Summary</h3></center>
                <span id="summarySpan"><br />"Fill the details to get your estimate!"</span>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    function carSelected() {
        var carId = document.getElementById("carSelector").value;
        var fromDate = document.getElementById("fromDatePicker").value;
        var toDate = document.getElementById("toDatePicker").value;
    console.log(carId+" "+fromDate+" "+toDate);
   if(carId==0||fromDate==""||toDate=="")
    {
    document.getElementById("summarySpan").innerHTML ="Fill the details to get your estimate!";
    document.getElementById("rentBtn").disabled=true;
    return;
    }
    document.getElementById("rentBtn").disabled=false;
       let carVarients;
        fetch("https://localhost:44305/api/Car/carvarient").then(response => response.json())
            .then((item) => {
                carVarients = item;
            });
        fetch("https://localhost:44305/api/Order/caravailability/fromdate=" + fromDate + "&todate=" + toDate + "/" + carId + "")
    .then(response => response.json())
            .then((item) => {
                console.log(item);
                if (item == "available")
                {
           
        fetch("https://localhost:44305/api/Car/" + carId).then(response => response.json())
            .then((item) => {
                
                var fromDate = new Date(document.getElementById("fromDatePicker").value);
                var toDate = new Date(document.getElementById("toDatePicker").value);
                const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*millisecond
                let diffDays = Math.round(Math.abs((toDate - fromDate) / oneDay));
                console.log(diffDays);
                if (diffDays == 0)
                    diffDays = 1;
                if (fromDate <= toDate && carId != 0)
                    {
    $( "#summarySpan" ).removeClass( "text-danger" );
    document.getElementById("summarySpan").innerHTML = "<br />Car Name : " + item.carName + "<br/>Car Varient : " + carVarients[item.carType] + "<br />Charge For a day : " + item.chargePerDay + "<br/> Total Cost  : " + (diffDays * item.chargePerDay);
    }        
    });}
    else{
    	
    $( "#summarySpan" ).addClass( "text-danger" );
     document.getElementById("summarySpan").innerHTML = "Selected car is unavailable for the slected dates <br/>Please try a date on or after"+item[0]+" or choose another car";
    document.getElementById("rentBtn").disabled=true;
    }
            });
    }
    function dateSelected() {
        var fromDate = new Date(document.getElementById("fromDatePicker").value);
        var toDate = new Date(document.getElementById("toDatePicker").value);
        if (fromDate > toDate) {
            document.getElementById("dateValidationMessage").innerHTML = "To Date must be higher than From Date";
            document.getElementById("toDatePicker").value = "";

        } else {
            carSelected();
            document.getElementById("dateValidationMessage").innerHTML = "";
        }

    }    
</script>
<script src="~/js/RentalPage.js" asp-append-version="true"></script>